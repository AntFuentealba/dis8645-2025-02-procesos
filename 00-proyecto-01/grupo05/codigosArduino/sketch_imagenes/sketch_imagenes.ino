#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C
#define potenciometro A3


Adafruit_SSD1306 display (SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
int j = 15; 
int velocidad; 


void setup () {
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS); 
  // limpia la pantalla antes de dibujar
  display.clearDisplay();
  // define el tamaño del texto
  display.setTextSize(1);
  display.setTextColor(WHITE);
     
}


void loop() {
  velocidad = analogRead(potenciometro); 
  velocidad =  map(velocidad, 0, 1023, 0, 100);
//primer intento de colocar una imagen, en este caso una cara feliz de pocos pixeles
   const unsigned char PROGMEM smiley_bmp[] = {
  0b00000000, 0b00000000,
  0b00011111, 0b11111000,
  0b00100000, 0b00000100,
  0b01000100, 0b01000010,
  0b10000000, 0b00000001,
  0b10010000, 0b00001001,
  0b10100000, 0b00000101,
  0b10010000, 0b00001001,
  0b10000000, 0b00000001,
  0b01000100, 0b01000010,
  0b00100000, 0b00000100,
  0b00011111, 0b11111000,
  0b00000000, 0b00000000,
  0b00000000, 0b00000000,
  0b00000000, 0b00000000,
  0b00000000, 0b00000000
};

 
 for (int i = 0; i < SCREEN_HEIGHT *3; i += 2) {
    display.clearDisplay();
    display.setCursor(0, SCREEN_HEIGHT - i);
    display.println(F("En Santiago de Chile"));
    display.println(F(""));
    display.println(F("los dias son"));
    display.println(F(""));
    display.println(F("interminablemente"));
    display.println(F(""));
    display.println(F("largos"));
    display.println(F(""));
    display.println(F(""));
    display.println(F(""));
    display.println(F(""));
    display.println(F(""));
  //con esta funcion se explicita que se dibujara una imagen, que en este caso es pequeña
  //evidenciando que sera una imagen estatica de 16x16 pixeles que estara en 100 y 0 como coordenadas
    display.drawBitmap(100, 0, smiley_bmp, 16, 16, WHITE); 
    display.display();
    delay(velocidad); 


  }
}


#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C
#define potenciometro A3


Adafruit_SSD1306 display (SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
int j = 15; 
int velocidad; 


void setup () {
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS); 
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
}
//aca se utilizo una imagen ya transformada del discord, por ser mas grande
const unsigned char PROGMEM smiley_bmp[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xc6, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xc6, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0x0d, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xcf, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xfe, 0x1d, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0x8f, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0x7b, 0xff, 0xff, 0xf7, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0x8f, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0x7b, 0xff, 0xff, 0xf7, 0xfe, 0x3f, 0xfe, 0x00, 0x1f, 0x0f, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0xfb, 0xff, 0xff, 0xf7, 0xfe, 0x3f, 0xe0, 0x00, 0x03, 0x1e, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xf8, 0xfb, 0xff, 0xff, 0xf7, 0xfe, 0x3e, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xf8, 0xfb, 0x3f, 0xff, 0xf7, 0xff, 0x00, 0x03, 0xff, 0xf0, 0x3c, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xf9, 0xfb, 0x3f, 0xff, 0xf7, 0xff, 0x00, 0x1f, 0xff, 0xfc, 0x7c, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xf1, 0xfb, 0xff, 0xf3, 0xf7, 0xff, 0x01, 0xff, 0xff, 0xfe, 0x78, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf1, 0xfb, 0xff, 0xf3, 0xf3, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xb0, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf1, 0xfb, 0xff, 0xff, 0xfb, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf1, 0xff, 0xc3, 0xff, 0xfb, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf9, 0xf7, 0xc3, 0xff, 0xfd, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xf8, 0xf7, 0xe7, 0xff, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xfe, 0x79, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0x87, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xe3, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfc, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfe, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x81, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x03, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x3f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0x9f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x3f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x77, 0xff, 0x1f, 0xff, 0x7f, 0xff, 0xff, 0x8f, 0xff, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x2f, 0xff, 0x0f, 0xfe, 0x7f, 0xff, 0xfe, 0x77, 0xff, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x1c, 0xfe, 0x07, 0xfe, 0xff, 0xff, 0xf1, 0xf3, 0xff, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xfe, 0x19, 0xfc, 0x0f, 0xfe, 0xff, 0xf0, 0x0f, 0xf8, 0xff, 0xcf, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x0b, 0xf8, 0x0f, 0xfe, 0x00, 0x00, 0x0f, 0xf8, 0xff, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x83, 0xf0, 0x1f, 0xfc, 0x00, 0x00, 0x0f, 0xf8, 0xdb, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xfc, 0x00, 0x7f, 0xc7, 0xf8, 0xdb, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xfc, 0x7f, 0xff, 0xc7, 0xf8, 0x5b, 0x8f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x08, 0x7f, 0xf8, 0xff, 0xff, 0xc7, 0xfc, 0x4d, 0x1f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xef, 0xf8, 0xff, 0xff, 0x8f, 0xfc, 0x08, 0x3f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xdf, 0xf1, 0xff, 0xff, 0x8d, 0xb8, 0x00, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xb9, 0xf1, 0xff, 0xff, 0x8d, 0xb8, 0x00, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x37, 0xe3, 0xff, 0xff, 0xcd, 0xb0, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x37, 0xc7, 0xff, 0xff, 0xc5, 0x81, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x07, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void loop() {
  velocidad = analogRead(potenciometro);
  velocidad =  map(velocidad, 0, 1023, 0, 100);

// 
 for (int i = 0; i < SCREEN_HEIGHT *3; i += 2) {
    display.clearDisplay();
    display.setCursor(0, SCREEN_HEIGHT - i);
    display.println(F("En Santiago de Chile"));
    display.println(F(""));
    display.println(F("los dias son"));
    display.println(F(""));
    display.println(F("interminablemente"));
    display.println(F(""));
    display.println(F("largos"));
    display.println(F(""));
    display.println(F(""));
    display.println(F(""));
    display.println(F(""));
    display.println(F("")); 

    display.display();
    delay(velocidad); 
  //se llama nuevamente a crear la imagen
display.drawBitmap(
  //pero las coordenadas son cambiadas para seguir el mismo movimiento y logica que el poema
  //en donde se ira restando de 2 en 2 pixeles para hacer que el texto y la imagen bajen
  //en este caso se dejo la posicion x en 50, causando que la imagen saliera a la mitad 
  50,  SCREEN_HEIGHT - i + SCREEN_HEIGHT , 
  smiley_bmp, 
  //ancho y alto de la imagen
  128, 64, 
  WHITE); 
display.display();
delay(velocidad);
  }
}

#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C
#define potenciometro A3

Adafruit_SSD1306 display (SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

int velocidad; 
//dejamos de lado la imagen de prueba e iniciamos con la imagen final
const unsigned char PROGMEM smiley_bmp[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xbe, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xe6, 0xbe, 0xbf, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x7f, 0xe3, 0xf3, 0x1e, 0xbe, 0xbf, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0xff, 0x8f, 0x8f, 0xf8, 0xfe, 0xbe, 0xbf, 0xf9, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc7, 0xff, 0xf0, 0x3f, 0xff, 0xfe, 0xbe, 0xbf, 0xfe, 0x41, 0xe1, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xbe, 0xbf, 0xff, 0x1f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 
	0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xbe, 0xbf, 0xff, 0xcf, 0xff, 0x9f, 0xff, 0xff, 0xff, 
	0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xbe, 0xbf, 0xff, 0xe3, 0xff, 0xe7, 0xfc, 0x07, 0xff, 
	0x1f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xfe, 0xbe, 0xbf, 0xff, 0xf9, 0xff, 0xf8, 0x03, 0xf9, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0xf1, 0xfe, 0xbe, 0xbf, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xfe, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0xfe, 0x3e, 0xbe, 0xbf, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x1f, 
	0xff, 0xff, 0x0f, 0xff, 0x9f, 0xff, 0xde, 0xbe, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xc7, 
	0xdf, 0xfc, 0xf0, 0xff, 0x7f, 0xff, 0xee, 0x7f, 0x37, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
	0xcf, 0xc3, 0xfe, 0x7c, 0x7f, 0xff, 0xfe, 0xff, 0xbb, 0x9f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x33, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xce, 0xff, 0xbf, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xaa, 0xbf, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7e, 0xff, 0xbf, 0xff, 0xff, 0xdf, 0xff, 0xe0, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xbf, 0xff, 0xff, 0xe7, 0xe0, 0x1f, 0xe7, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb8, 0x00, 0x03, 0xff, 0x9f, 0xff, 0xf8, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xb7, 0xff, 0xfd, 0xfe, 0x7f, 0xff, 0xff, 0x0f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb5, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xb7, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb5, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xb7, 0x00, 0x1d, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb6, 0xff, 0xe5, 0xff, 0xc1, 0xff, 0xff, 0xff, 
	0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xae, 0x06, 0x0d, 0xff, 0xbe, 0xff, 0xff, 0xff, 
	0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xaa, 0xff, 0xe5, 0xff, 0x88, 0xff, 0xff, 0xff, 
	0xfe, 0xf0, 0x0f, 0xcf, 0xff, 0xff, 0xfe, 0xaa, 0xae, 0x06, 0x0d, 0xff, 0xbe, 0xff, 0xff, 0xff, 
	0xe0, 0xef, 0xf7, 0x97, 0xff, 0xff, 0xfe, 0xff, 0xaa, 0xff, 0xe5, 0xff, 0x88, 0xff, 0xff, 0xff, 
	0x2e, 0xe1, 0x87, 0x6b, 0xff, 0xfc, 0x3e, 0xaa, 0xae, 0x06, 0x0d, 0xc3, 0xbe, 0xff, 0xff, 0xff, 
	0xae, 0xef, 0xf6, 0xf5, 0xfe, 0x7b, 0xde, 0xff, 0xaa, 0xff, 0xe5, 0xbc, 0x88, 0xff, 0xff, 0xff, 
	0x06, 0xe1, 0x86, 0x01, 0xfd, 0x82, 0x5e, 0xaa, 0xae, 0x06, 0x0d, 0xbc, 0x3e, 0xff, 0xff, 0x83, 
	0xfa, 0xef, 0xf6, 0xf5, 0xfd, 0xbb, 0xde, 0xff, 0xaa, 0xff, 0xed, 0xbb, 0xd8, 0xe7, 0xef, 0x79, 
	0x7a, 0xe1, 0x86, 0x54, 0x03, 0xda, 0x5e, 0xaa, 0xae, 0xff, 0x80, 0x17, 0xee, 0xeb, 0xd6, 0xf8, 
	0xe0, 0xef, 0xf0, 0xf5, 0xf2, 0xdb, 0xde, 0xff, 0x0e, 0xff, 0x7f, 0xe7, 0xe8, 0xc1, 0x00, 0x67, 
	0x5e, 0xe1, 0x86, 0x55, 0xfb, 0xda, 0x5e, 0xaa, 0xf0, 0x00, 0x55, 0x47, 0xe6, 0xbe, 0x77, 0xaf, 
	0xd4, 0xef, 0xf6, 0xf5, 0xfa, 0xc1, 0xde, 0xfe, 0xff, 0x99, 0x7f, 0xe1, 0xf0, 0xaa, 0xf7, 0x03, 
	0x5e, 0xe1, 0x86, 0x55, 0x9b, 0xdc, 0x1e, 0xaa, 0xaa, 0xff, 0x55, 0x4e, 0xf6, 0xbe, 0xf6, 0x7d, 
	0xd4, 0xef, 0xf6, 0xc0, 0x0b, 0x0f, 0xc2, 0xfe, 0xff, 0xff, 0x1f, 0xee, 0xe6, 0x2c, 0xf6, 0xfd, 
	0xde, 0xe1, 0x86, 0xbf, 0xc0, 0x75, 0x7c, 0x1e, 0xaa, 0x80, 0x61, 0x4e, 0xef, 0x38, 0x00, 0x0d, 
	0x00, 0xef, 0xf0, 0x2a, 0xbe, 0x77, 0xfd, 0xee, 0xff, 0x7e, 0xfb, 0xfe, 0xc9, 0xb7, 0xff, 0xf5, 
	0xff, 0x61, 0x87, 0xbf, 0xfe, 0xf5, 0x70, 0xe0, 0xaa, 0x7e, 0xfb, 0xfe, 0xdf, 0xb5, 0x56, 0x35, 
	0x35, 0x5e, 0xf7, 0xb1, 0x9e, 0xf7, 0xe7, 0x6e, 0x1f, 0x00, 0x00, 0x00, 0x19, 0x96, 0x7d, 0xd5, 
	0x8f, 0x5e, 0x9e, 0x2e, 0x64, 0x77, 0x0f, 0x6c, 0xce, 0xff, 0xff, 0xff, 0xef, 0xd5, 0xbb, 0xe5, 
	0xe5, 0x5e, 0x6d, 0xaf, 0x7b, 0xb4, 0xe7, 0x6d, 0xe6, 0xaf, 0x7c, 0x7e, 0xa9, 0xd3, 0xdb, 0xe5, 
	0xf7, 0x5e, 0xf3, 0xcf, 0x7b, 0x95, 0xfb, 0x6d, 0xf6, 0xfe, 0xbb, 0xbf, 0xef, 0xd3, 0xdb, 0xe5
};

void setup () {
  // inicia la pantalla OLED
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS); 
  // limpia la pantalla antes de dibujar.
  display.clearDisplay();
  // define el tamaño del texto.
  display.setTextSize(1); 
  // define el color del texto.
  display.setTextColor(WHITE); 
}

void loop() {
  // la variable velocidad lee el potenciometro.
  velocidad = analogRead(potenciometro); 
  // se determina con map que los valores de potenciometro sean adaptados a la velociaad que se mueve el texto. 
  velocidad = map(velocidad, 0, 1023, 0, 100); 
  // variable i, determina que el texto va subiendo desde abajo hacia arriba.
 for (int i = 0; i < SCREEN_HEIGHT *4; i += 2) {
    display.clearDisplay();
    // se determina que el texto vaya suiendo 
    display.setCursor(0, SCREEN_HEIGHT - i);
    //en este caso extendimos el poema por varias lineas, algo que termino alterando la posicion de la imagen
    display.println(F("En Santiago de Chile"));
    display.println(F(""));
    display.println(F("los dias son"));
    display.println(F(""));
    display.println(F("interminablemente."));
    display.println(F(""));
    display.println(F("largos."));
    display.println(F(""));
    display.println(F("Varias eternidades"));
    display.println(F(""));
    display.println(F("en un dia."));
    display.println(F(""));
    display.println(F("Nos desplazamos"));
    display.println(F(""));
    display.println(F("a lomo de luma")); 
    display.println(F(""));
    display.println(F("Como los vendedores"));
    display.println(F(""));
    display.println(F("de cochayuyo:"));
    display.println(F(""));
    display.println(F("Se bosteza."));
    display.println(F(""));
    display.println(F("Se vuelve a bostezar."));
      display.println(F(""));
      display.println(F(""));
     display.println(F(""));
    // envía el contenido preparado, texto, a la pantalla.
    display.display();
    // ajusta el retraso de velocidad del scroll segun designado en for. 
    delay(velocidad); 
    
    display.drawBitmap(
    //aun siguiendo la misma logica que el texto, la imagen se colocaba en medio de todo
    //se probo usar un delay, pero no termino de convivir con el potenciometro
    //pero se termino arreglando el problema de la imagen recortada, cambiando el 50 por 0
  0,  SCREEN_HEIGHT - i + SCREEN_HEIGHT , 
  smiley_bmp,
  128, 64, 
  WHITE); 
display.display();
delay(velocidad);
  }
}


#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C
#define potenciometro A3

Adafruit_SSD1306 display (SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
// se crea la variable volocidad
int velocidad; 
// se utiliza la imagen final, pero no cambiamos el nombre de esta linea desde el principio
const unsigned char PROGMEM smiley_bmp[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xdd, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xbe, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xe6, 0xbe, 0xbf, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0x00, 0x7f, 0xe3, 0xf3, 0x1e, 0xbe, 0xbf, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xf8, 0xff, 0x8f, 0x8f, 0xf8, 0xfe, 0xbe, 0xbf, 0xf9, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xc7, 0xff, 0xf0, 0x3f, 0xff, 0xfe, 0xbe, 0xbf, 0xfe, 0x41, 0xe1, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xbe, 0xbf, 0xff, 0x1f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 
 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xbe, 0xbf, 0xff, 0xcf, 0xff, 0x9f, 0xff, 0xff, 0xff, 
 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xbe, 0xbf, 0xff, 0xe3, 0xff, 0xe7, 0xfc, 0x07, 0xff, 
 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xfe, 0xbe, 0xbf, 0xff, 0xf9, 0xff, 0xf8, 0x03, 0xf9, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xf9, 0xf1, 0xfe, 0xbe, 0xbf, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xfe, 0x7f, 
 0xff, 0xff, 0xff, 0xff, 0xe7, 0xfe, 0x3e, 0xbe, 0xbf, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x1f, 
 0xff, 0xff, 0x0f, 0xff, 0x9f, 0xff, 0xde, 0xbe, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xc7, 
 0xdf, 0xfc, 0xf0, 0xff, 0x7f, 0xff, 0xee, 0x7f, 0x37, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
 0xcf, 0xc3, 0xfe, 0x7c, 0x7f, 0xff, 0xfe, 0xff, 0xbb, 0x9f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0x33, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xce, 0xff, 0xbf, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0xaa, 0xbf, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7e, 0xff, 0xbf, 0xff, 0xff, 0xdf, 0xff, 0xe0, 0x1f, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xbf, 0xff, 0xff, 0xe7, 0xe0, 0x1f, 0xe7, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb8, 0x00, 0x03, 0xff, 0x9f, 0xff, 0xf8, 0xff, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xb7, 0xff, 0xfd, 0xfe, 0x7f, 0xff, 0xff, 0x0f, 
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb5, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xb7, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb5, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xb7, 0x00, 0x1d, 0xff, 0xff, 0xff, 0xff, 0xff, 
 0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xb6, 0xff, 0xe5, 0xff, 0xc1, 0xff, 0xff, 0xff, 
 0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xaa, 0xae, 0x06, 0x0d, 0xff, 0xbe, 0xff, 0xff, 0xff, 
 0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xaa, 0xff, 0xe5, 0xff, 0x88, 0xff, 0xff, 0xff, 
 0xfe, 0xf0, 0x0f, 0xcf, 0xff, 0xff, 0xfe, 0xaa, 0xae, 0x06, 0x0d, 0xff, 0xbe, 0xff, 0xff, 0xff, 
 0xe0, 0xef, 0xf7, 0x97, 0xff, 0xff, 0xfe, 0xff, 0xaa, 0xff, 0xe5, 0xff, 0x88, 0xff, 0xff, 0xff, 
 0x2e, 0xe1, 0x87, 0x6b, 0xff, 0xfc, 0x3e, 0xaa, 0xae, 0x06, 0x0d, 0xc3, 0xbe, 0xff, 0xff, 0xff, 
 0xae, 0xef, 0xf6, 0xf5, 0xfe, 0x7b, 0xde, 0xff, 0xaa, 0xff, 0xe5, 0xbc, 0x88, 0xff, 0xff, 0xff, 
 0x06, 0xe1, 0x86, 0x01, 0xfd, 0x82, 0x5e, 0xaa, 0xae, 0x06, 0x0d, 0xbc, 0x3e, 0xff, 0xff, 0x83, 
 0xfa, 0xef, 0xf6, 0xf5, 0xfd, 0xbb, 0xde, 0xff, 0xaa, 0xff, 0xed, 0xbb, 0xd8, 0xe7, 0xef, 0x79, 
 0x7a, 0xe1, 0x86, 0x54, 0x03, 0xda, 0x5e, 0xaa, 0xae, 0xff, 0x80, 0x17, 0xee, 0xeb, 0xd6, 0xf8, 
 0xe0, 0xef, 0xf0, 0xf5, 0xf2, 0xdb, 0xde, 0xff, 0x0e, 0xff, 0x7f, 0xe7, 0xe8, 0xc1, 0x00, 0x67, 
 0x5e, 0xe1, 0x86, 0x55, 0xfb, 0xda, 0x5e, 0xaa, 0xf0, 0x00, 0x55, 0x47, 0xe6, 0xbe, 0x77, 0xaf, 
 0xd4, 0xef, 0xf6, 0xf5, 0xfa, 0xc1, 0xde, 0xfe, 0xff, 0x99, 0x7f, 0xe1, 0xf0, 0xaa, 0xf7, 0x03, 
 0x5e, 0xe1, 0x86, 0x55, 0x9b, 0xdc, 0x1e, 0xaa, 0xaa, 0xff, 0x55, 0x4e, 0xf6, 0xbe, 0xf6, 0x7d, 
 0xd4, 0xef, 0xf6, 0xc0, 0x0b, 0x0f, 0xc2, 0xfe, 0xff, 0xff, 0x1f, 0xee, 0xe6, 0x2c, 0xf6, 0xfd, 
 0xde, 0xe1, 0x86, 0xbf, 0xc0, 0x75, 0x7c, 0x1e, 0xaa, 0x80, 0x61, 0x4e, 0xef, 0x38, 0x00, 0x0d, 
 0x00, 0xef, 0xf0, 0x2a, 0xbe, 0x77, 0xfd, 0xee, 0xff, 0x7e, 0xfb, 0xfe, 0xc9, 0xb7, 0xff, 0xf5, 
 0xff, 0x61, 0x87, 0xbf, 0xfe, 0xf5, 0x70, 0xe0, 0xaa, 0x7e, 0xfb, 0xfe, 0xdf, 0xb5, 0x56, 0x35, 
 0x35, 0x5e, 0xf7, 0xb1, 0x9e, 0xf7, 0xe7, 0x6e, 0x1f, 0x00, 0x00, 0x00, 0x19, 0x96, 0x7d, 0xd5, 
 0x8f, 0x5e, 0x9e, 0x2e, 0x64, 0x77, 0x0f, 0x6c, 0xce, 0xff, 0xff, 0xff, 0xef, 0xd5, 0xbb, 0xe5, 
 0xe5, 0x5e, 0x6d, 0xaf, 0x7b, 0xb4, 0xe7, 0x6d, 0xe6, 0xaf, 0x7c, 0x7e, 0xa9, 0xd3, 0xdb, 0xe5, 
 0xf7, 0x5e, 0xf3, 0xcf, 0x7b, 0x95, 0xfb, 0x6d, 0xf6, 0xfe, 0xbb, 0xbf, 0xef, 0xd3, 0xdb, 0xe5
};

void setup () {
  // inicia la pantalla OLED
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS); 
  // limpia la pantalla antes de dibujar.
  display.clearDisplay();
  // define el tamaño del texto.
  display.setTextSize(1); 
  // define el color del texto.
  display.setTextColor(WHITE); 
}

void loop() {
  // la variable velocidad lee el potenciometro.
  velocidad = analogRead(potenciometro); 
  // se determina con map que los valores de potenciometro sean adaptados a la velocidad que se mueve el texto. 
  velocidad = map(velocidad, 0, 1023, 0, 100); 
  // variable i, determina que el texto va subiendo desde abajo hacia arriba.
 for (int i = 0; i < SCREEN_HEIGHT *4; i += 2) {
    display.clearDisplay();
    // se determina que el texto vaya suiendo 
    display.setCursor(0, SCREEN_HEIGHT - i);
    display.println(F("En Santiago de Chile"));
    display.println(F(""));
    display.println(F("los dias son"));
    display.println(F(""));
    display.println(F("interminablemente."));
    display.println(F(""));
    display.println(F("largos."));
//gran espacio para acomodar la imagen en medio del poema y que no se corte o no sea leible
  display.println(F(""));
    display.println(F(""));
    display.println(F(""));
    display.println(F(""));
  display.println(F(""));
    display.println(F(""));
    display.println(F(""));
  display.println(F(""));
    display.println(F(""));
    display.println(F("Varias eternidades"));
    display.println(F(""));
    display.println(F("en un dia."));
    display.println(F(""));
    display.println(F("Nos desplazamos"));
    display.println(F(""));
    display.println(F("a lomo de luma")); 
    display.println(F(""));
    display.println(F("Como los vendedores"));
    display.println(F(""));
    display.println(F("de cochayuyo:"));
    display.println(F(""));
    display.println(F("Se bosteza."));
    display.println(F(""));
    display.println(F("Se vuelve a bostezar."));
    
  //Antes aqui habia un display.display(); pero fue eliminado. con ello, la imagen dejo de titilar
    delay(velocidad); 
    
    display.drawBitmap(
  0,  SCREEN_HEIGHT - i + SCREEN_HEIGHT , 
  smiley_bmp, 
  128, 64, 
  WHITE); 

display.display();
delay(velocidad);
  }
}


